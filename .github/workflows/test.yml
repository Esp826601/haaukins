name: Test

on: [push, pull_request]

jobs:
  formalities:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Extract branch name
        shell: bash
        run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/})"

      - name: Check branch name
        run: |
          echo "Checking ${BRANCH_NAME}..."
          curl -o check-branch-name.py https://raw.githubusercontent.com/aau-network-security/richkit/develop/.githooks/check-branch-name.py
          python3 check-branch-name.py "$BRANCH_NAME"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.13', '1.14' ]
    name: Test on Go ${{ matrix.go }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      ## Linting codebase will be added in future.
      #      - name: Lint
      #        run: |
      #          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.24.0
      #          ./bin/golangci-lint run -D errcheck
      - name: Test
        env:
          GITHUB_CI: "GITHUB_CI"
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          go test -race -coverprofile=coverage.txt -covermode=atomic -v ./...
          bash <(curl -s https://codecov.io/bash)
